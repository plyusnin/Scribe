<Window x:Class="Scribe.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Scribe.Wpf"
        xmlns:viewModel="clr-namespace:Scribe.Wpf.ViewModel"
        xmlns:reactiveUi="clr-namespace:ReactiveUI;assembly=ReactiveUI"
        xmlns:converters="clr-namespace:Scribe.Wpf.Converters"
        xmlns:behaviors="clr-namespace:Scribe.Wpf.Behaviors"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:control="clr-namespace:LogList.Control;assembly=LogList.Control"
        mc:Ignorable="d"
        SnapsToDevicePixels="True" TextOptions.TextFormattingMode="Display" UseLayoutRounding="True"
        Title="The Scribe" d:DataContext="{d:DesignInstance viewModel:MainViewModel}">
    <Window.Resources>
        <ResourceDictionary>
            <converters:ColorIndexToBrushConverter x:Key="ColorConverter">
                <converters:ColorIndexToBrushConverter.Brushes>
                    <SolidColorBrush Color="Black" />
                    <SolidColorBrush Color="RoyalBlue" />
                    <SolidColorBrush Color="OrangeRed" />
                    <SolidColorBrush Color="ForestGreen" />
                    <SolidColorBrush Color="Gray" />
                    <SolidColorBrush Color="DarkViolet" />
                    <SolidColorBrush Color="DarkOrange" />
                    <SolidColorBrush Color="Goldenrod" />
                    <SolidColorBrush Color="OliveDrab" />
                    <SolidColorBrush Color="Fuchsia" />
                    <SolidColorBrush Color="SaddleBrown" />
                    <SolidColorBrush Color="LightSlateGray" />
                </converters:ColorIndexToBrushConverter.Brushes>
            </converters:ColorIndexToBrushConverter>
            
            <BooleanToVisibilityConverter x:Key="btv" />
            
            <DataTemplate x:Key="LogItemTemplate" DataType="viewModel:LogRecordViewModel">
                <Grid x:Name="ItemRoot" MouseLeftButtonUp="ListItem_OnMouseLeftButtonUp"
                      TextBlock.Foreground="{Binding Path=Source.ColorIndex, Converter={StaticResource ColorConverter}}"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="320" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Time, StringFormat='HH:mm:ss.fff', Mode=OneTime}" />
                    <TextBlock Grid.Column="1" Text="{Binding Path=Level, Mode=OneTime}" />
                    <TextBlock Grid.Column="2" ToolTip="{Binding Path=Source.Name, Mode=OneTime}" Text="{Binding Path=Source.Name, Mode=OneTime}" />
                    <TextBlock Grid.Column="3" ToolTip="{Binding Message, Mode=OneTime}" Text="{Binding Message, Mode=OneTime}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="Trace">
                        <Setter TargetName="ItemRoot" Property="TextBlock.FontWeight" Value="UltraLight" />
                        <Setter TargetName="ItemRoot" Property="Opacity" Value="0.7" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="Debug">
                        <Setter TargetName="ItemRoot" Property="TextBlock.FontWeight" Value="Light" />
                        <Setter TargetName="ItemRoot" Property="Opacity" Value="0.8" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="Warn">
                        <Setter TargetName="ItemRoot" Property="Background" Value="#14FFAB00" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="Error">
                        <Setter TargetName="ItemRoot" Property="TextBlock.FontWeight" Value="Bold" />
                        <Setter TargetName="ItemRoot" Property="Background" Value="#20FF4500" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="Fatal">
                        <Setter TargetName="ItemRoot" Property="TextBlock.FontWeight" Value="Bold" />
                        <Setter TargetName="ItemRoot" Property="Background" Value="#20FF4500" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                        <Setter TargetName="ItemRoot" Property="TextBlock.FontWeight" Value="ExtraBold" />
                        <Setter TargetName="ItemRoot" Property="Background" Value="#7C56F600" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Name="Toolbar" Margin="2">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Padding" Value="5" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="MinWidth"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="Root"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            CornerRadius="2" Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Foreground}"
                                            BorderBrush="{TemplateBinding Foreground}" BorderThickness="1">
                                        <ContentPresenter Name="Content" ContentSource="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <ContentPresenter.Effect>
                                                <DropShadowEffect Opacity="0.1" ShadowDepth="1" BlurRadius="3" />
                                            </ContentPresenter.Effect>
                                        </ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="Root" Property="BorderBrush" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="False">
                                            <Setter TargetName="Root" Property="Background" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Content" Property="TextBlock.Foreground" Value="White" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Root" Property="Opacity" Value="0.3" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}"
                           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="5" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="MinWidth"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Name="Root">
                                        <Rectangle Name="Decoration"
                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                   RadiusX="2"
                                                   RadiusY="{Binding RelativeSource={RelativeSource Self}, Path=RadiusX}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
                                        <ContentPresenter Name="Content" ContentSource="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                                          Margin="{TemplateBinding Padding}">
                                            <ContentPresenter.Effect>
                                                <DropShadowEffect Opacity="0.1" ShadowDepth="1" BlurRadius="3" />
                                            </ContentPresenter.Effect>
                                        </ContentPresenter>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="Decoration" Property="Stroke" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter TargetName="Decoration" Property="Fill" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="Content" Property="TextBlock.Foreground" Value="White" />
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Decoration"
                                                                         Storyboard.TargetProperty="RadiusX"
                                                                         To="15" Duration="0:0:0.4">
                                                            <DoubleAnimation.EasingFunction>
                                                                <BounceEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Decoration"
                                                                         Storyboard.TargetProperty="RadiusX"
                                                                         Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Root" Property="Opacity" Value="0.3" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <ToggleButton IsChecked="{Binding AutoScroll}" Foreground="#4F9E63" ToolTip="Автоскролл"
                              Content="" FontFamily="/Fonts/#Font Awesome 5 Free Regular" />
                <Rectangle Width="18" />
                <Button Command="{Binding OpenLogFile}" Foreground="#BB820E" ToolTip="Загрузить лог из файла"
                        Content="" FontFamily="/Fonts/#Font Awesome 5 Free Solid" />
                <Button Command="{Binding Clear}" Foreground="#590EBB" ToolTip="Очистить лог"
                        Content="" FontFamily="/Fonts/#Font Awesome 5 Free Regular" />
                <Rectangle Width="18" />
                <ToggleButton Foreground="#59BB0E" Content="" FontFamily="/Fonts/#Font Awesome 5 Free Solid"
                              Name="BookmarksButton" ToolTip="Список закладок" />
                <Popup IsOpen="{Binding ElementName=BookmarksButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=BookmarksButton}"
                       Placement="Bottom" StaysOpen="False" PopupAnimation="Fade" AllowsTransparency="True"
                       VerticalOffset="-10" HorizontalOffset="15">
                    <ItemsControl ItemsSource="{Binding HighlightedRecords}" Background="White"
                                  BorderBrush="{Binding ElementName=BookmarksButton, Path=Foreground}"
                                  BorderThickness="1"
                                  MaxWidth="400" Margin="40">
                        <ItemsControl.Effect>
                            <DropShadowEffect Opacity="0.2" BlurRadius="30" Direction="-90" />
                        </ItemsControl.Effect>
                        <ItemsControl.CommandBindings>
                            <CommandBinding Command="NavigateJournal" Executed="CommandBinding_OnExecuted" />
                        </ItemsControl.CommandBindings>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding Message}" Command="NavigateJournal"
                                          CommandParameter="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Popup>
            </StackPanel>
            <DockPanel Grid.Column="1" VerticalAlignment="Center">
                <Label Content="Поиск:" DockPanel.Dock="Left" VerticalAlignment="Center" />
                <TextBox Text="{Binding QuickFilter, UpdateSourceTrigger=PropertyChanged}" Margin="2" MinWidth="170"
                         Padding="3" />
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="280" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MinHeight="300" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <control:LogListBox Grid.Row="0" Name="LogBox"
                                    ItemsSource="{Binding Records}" FontFamily="Consolas"
                                    ItemTemplate="{StaticResource LogItemTemplate}">
                                    <!-- SelectionChanged="LogBox_OnSelectionChanged" -->
                </control:LogListBox>
                <TextBox Grid.Row="1" IsReadOnly="True" FontFamily="Consolas"
                         Padding="2,5,0,5" Margin="0,2,0,0" VerticalScrollBarVisibility="Visible"
                         Visibility="{Binding HasExceptionToShow, Converter={StaticResource btv}}"
                         Text="{Binding Path=SelectedRecord.Exception, Mode=OneWay}">
                    <TextBox.Background>
                        <LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,1.0">
                            <GradientStop Color="#11FF00CB" />
                            <GradientStop Offset="0.5" Color="Transparent" />
                        </LinearGradientBrush>
                    </TextBox.Background>
                </TextBox>
            </Grid>

            <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="2" ResizeBehavior="PreviousAndNext" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ListView Grid.Row="0" ItemsSource="{Binding Sources}" FontFamily="Consolas" Name="SourcesList">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Источник" DisplayMemberBinding="{Binding Name}" Width="300" />
                        </GridView>
                    </ListView.View>
                </ListView>
                <GridSplitter Grid.Row="1" ResizeDirection="Columns" Height="2" ResizeBehavior="PreviousAndNext" />
                <Border Grid.Row="2" DataContext="{Binding ElementName=SourcesList, Path=SelectedItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Цвет:" HorizontalAlignment="Right"
                                   VerticalAlignment="Center" Margin="4,2" />
                        <ComboBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Margin="4" IsReadOnly="True"
                                  ItemsSource="{Binding Source={StaticResource ColorConverter}, Path=Brushes}"
                                  SelectedIndex="{Binding Path=ColorIndex}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Height="18" Width="100" Fill="{Binding}" Stroke="Black"
                                               StrokeThickness="1" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Уровни:" HorizontalAlignment="Right"
                                   VerticalAlignment="Top" Margin="4,2" />
                        <ItemsControl Grid.Row="1" Grid.Column="1" Margin="2"
                                      ItemsSource="{Binding Path=DisplayLogLevels}"
                                      IsTabStop="False" Focusable="False">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="viewModel:LogLevelFilterViewModel">
                                    <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding Name}" Margin="2" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock>
                    <Run Text="Выбрано:" />
                    <Run Text="{Binding SelectedRecords.Count, Mode=OneWay}" FontWeight="SemiBold" />
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock>
                    <Run Text="Интервал:" />
                    <Run Text="{Binding SelectedInterval.TotalSeconds, Mode=OneWay, StringFormat='F3'}"
                         FontWeight="SemiBold" />
                    <Run Text="сек." />
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                <StackPanel Orientation="Horizontal" Visibility="{Binding Path=Progress.IsActive, Mode=OneWay, Converter={StaticResource btv}}">
                    <TextBlock VerticalAlignment="Center" Margin="2" Text="{Binding Path=Progress.Text}" />
                    <ProgressBar Width="140" Minimum="0" Maximum="1" Value="{Binding Path=Progress.Value, Mode=OneWay}"
                                 VerticalAlignment="Stretch" Margin="2" />                    
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>